apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'com.jaredsburrows.license'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'

// Keystore configuration
def keystorePropertiesFile = rootProject.file('android-keystore.properties')
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.texasgamer.zephyr"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 10
        versionName "2.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    signingConfigs {
        release {
            if (keystorePropertiesFile.exists()) {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if (keystorePropertiesFile.exists()) {
                signingConfig signingConfigs.release
            }
        }
        debug {
            debuggable true
        }
    }
    flavorDimensions "mode"
    productFlavors {
        production {

        }
        dev {

        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError true
        xmlReport false
        htmlReport true
        lintConfig file("${project.rootDir}/config/lint/lint.xml")
        htmlOutput file("${project.rootDir}/reports/lint/lint-result.html")
        xmlOutput file("${project.rootDir}/reports/lint/lint-result.xml")
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Android Debug Database
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.4'

    // ButterKnife
    implementation ('com.jakewharton:butterknife:9.0.0-SNAPSHOT') {
        exclude module: 'support-compat'
    }
    annotationProcessor 'com.jakewharton:butterknife-compiler:9.0.0-SNAPSHOT'

    // CameraView
    implementation 'com.otaliastudios:cameraview:2.0.0-beta02'

    // Chrome Custom Tabs
    implementation 'com.android.support:customtabs:28.0.0'

    // Dagger
    implementation 'com.google.dagger:dagger:2.17'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.17'

    // Design
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'

    // EventBus
    implementation 'org.greenrobot:eventbus:3.1.1'

    // Firebase / Fabric
    implementation 'com.google.firebase:firebase-core:16.0.8'
    implementation 'com.google.firebase:firebase-config:16.4.0'
    implementation 'com.google.firebase:firebase-ml-vision:19.0.2'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.9'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.5'

    // IndefinitePagerIndicator
    implementation 'com.ryanjeffreybrooks:indefinitepagerindicator:1.0.10'

    // IndicatorFastScroll
    implementation 'com.reddit:indicator-fast-scroll:1.1.0-beta1'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.0'

    // LiveData
    implementation "androidx.lifecycle:lifecycle-runtime:2.0.0"
    implementation "androidx.lifecycle:lifecycle-extensions:2.0.0"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:2.0.0"

    // Palette
    implementation 'androidx.palette:palette:1.0.0'

    // Room
    implementation "androidx.room:room-runtime:2.1.0-alpha05"
    annotationProcessor "androidx.room:room-compiler:2.1.0-alpha05"

    // SocketIO
    implementation ('io.socket:socket.io-client:1.0.0') {
        // excluding org.json which is provided by Android
        exclude group: 'org.json', module: 'json'
    }

    // Tests
    testImplementation 'junit:junit:4.12'
    testImplementation 'androidx.test:core:1.1.0'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'com.google.truth:truth:0.42'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    // WorkManager
    implementation "android.arch.work:work-runtime:1.0.0"
}

apply plugin: 'com.google.gms.google-services'